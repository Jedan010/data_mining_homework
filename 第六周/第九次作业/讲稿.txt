基于案例的推理是什么呢？顾名思义，基于案例的推理就是基于过去的实际经验或经历进行的推理。

根据马克思主义，世界是普遍联系的。我们的推理也是普遍联系的。那我们的推理是怎么联系的呢？回想一下我们面对新的问题会先做什么。我们不会将这个问题割裂开，而是迅速在脑海里搜索与面对的这个问题最相似的案例，因为案例往往包含了我们的解决方法，而且很多时候存储的都是成功的方法，所以我们可以借助过去的案例来解决现在的问题。

基于案例的推理就是根据这个朴素的思想发展出来的一个算法。

比如，当我们生病了去看第一次去医生的时候，医生也肯定是第一看我们啦。这时候面对我们这样新的“问题”，医生就会像图片中的小姐姐一样，很温柔的问我们哪里不舒服啊，有没有发烧啊等等，然后会给我们听诊，必要的时候还要我们去做检查。

做完之后，美丽的医生姐姐就能大致了解“我们这个新问题”的特特征，从而能在行医多年的病例中找到与我们相似的案例，大致推断我们的情况，是感冒，还有肺炎，或者就是无聊过来看看。	





接下来我们看看CBR的求解过程，CBR求解过程分为4个步骤，都有英文首字母都为R，所以简R称4R，这4R分别是

Retrive， 案例检索，从我们以往的案例库中检索与现在问题最相近的案例。

Reuse 案例复用，既然能找到与现在问题相似的案例，那我们就可以愉快地将过去的办法解决到现在的问题中啦。

Revise 案例修改 但是不要高兴的太早，虽然找到了最相近的案例，但是世界除了是相互联系的之外，世界也是不断运动的，就像老孙也是不断运动的，一下就瘦了20斤，跟大一的老孙完全不一样了虽然现在胖回来了一些。
也就是说完全照搬过去案例解决的方案很可能是行不通的，所以我们面对新的问题，需要对案例的方法进行一定的修改，才能更好的解决我们面对的问题。

最后一个是Retain， 案例保留。当我们最后愉快的解决了这个问题之后，这又成了一个新的案例，我们应该把它储存在我们的案例库中，以便下次检索使用。


案例的表示
CBR的案例表示问题实质上就是使用什么样的结构表示案例，将什么信息存入案例，以及如何组织、索引以提高检索和重用效率的问题。
案例一般由问题的描述、相应的解决方案以及方案实施效果三部分组成，其中问题的描述及相应的解决方案是案例描述时必须包含的信息，方案的实施效果则是根据案例库建立的需求而定的。一般的表现形式为<问题；解决方案；实施效果>。
两个最具有影响力的存储模型：Schank的动态存储模型和Porter的分类—范例模型。


案例的检索
案例检索就是从案例库中搜索出与目标案例最为相似，对目标案例最有帮助的案例，案例检索的过程就是一个查找和匹配的过程。在CBR 中相似案例的检索要达到检索出的相似案例尽量的少和检索出的案例与目标案例尽可能的相似这两个目标。
目前比较常用的案例检索算法有知识引导法、神经网络法、归纳索引法和最近相邻法。


案例的复用
把检索到的旧案例 的解答复用到新问题或新案例之中通过所给问题和案例 库中案例 比较得到新旧案例之间的不同之处，然后回答哪些解答部分可以复用到新问题之中。
对于简单的分类问题，仅需要把旧案例的分类结果直接用于新案例,它无需考虑新旧案例之间的差别。


案例的调整和修改

为了更好地解决新问题，根据新问题的情况对检索到的相似案例进行调整和修改的过程称为案例的调整和修改。案例的调整和修改可以是对一个相似案例进行，也可以是对多个相似案例重组并修改。
根据案例调整和修改的执行者可以将其分为系统修改和用户修改两类。
系统修改是CBR 系统根据提前预定义的某种案例修改策略来对相似案例的解决方案进行调整和修改，并将调整和修改后的方案交给用户。
用户修改是指用户根据问题的情况以及自身的要求对相似案例进行相应的调整和修改以得到新问题的解决方案。
一般情况下，这两种案例调整和修改的方法是结合使用的，首先对案例进行系统修改，将系统修改和调整后的案例提交给用户，用户再根据需求和新情况对案例进行修改和调整，最终产生适用于新问题的解决方案。


案例的保存
保存即为插入。插入要调用索引选择过程，以决定案例被索引的方式。插入算法使用这些索引来把案例插入案例库中适当的地方。一般来说，插入工作所做的搜索和检索相同。插入算法搜索的目的是找到一个可插入案例的地方，而检索的目的是为了找到相似的案例。当检索算法找到了相似的案例后就进行案例排位，而插入算法则是插入源案例并根据需要重新组织案例库结构。
